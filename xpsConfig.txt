#### CONFIG FILE FOR XPS ERROR BAR CALCULATION

#### LABORATORY FOR ASTROPHYSICS AND SURFACE PHYSICS AT UVA,
#### JACKSON GLASS,
#### 2024,

#### DO NOT EDIT ANY LINES CONTAINING '#' or any '>' characters

#### USER MANUAL -- HOW TO USE THIS SCRIPT FOR XPS ANALYSIS
##

// Note: to be deleted/rewritten:
// Basically, I'm planning to have this calculate the background region first, and that file will output a csv of all of the regions to subtract of background 
// The user will generate these regions by running a python command which references this text file
// The user can then check the background regions, and then manually edit them below
// To calculate atomic % from this the user runs another python script, referncing the output csv of regions and this config file

#### SELECT DATA TO BE ANALYZED
>>> EdgarEastSpectrum.csv

#### ELEMENTS TO ANALYZE / PEAK CENTERS
## Write in a comma separated list alternating element name and peak center (eV), i.e. 'Fe, 712.5, Mg, 91, O, 535'
## You do not need to specify the atomic transition (e.g. you can write O instead of O1s)
## Write your list of elements and peak centers on the following line:
>>> C, 286.5, O, 533, F, 688, Na, 57.5, Mg, 90.5, Al, 76, Si, 155, P, 135.5, S, 171.5, Cl, 200.5, Cr, 580.5, Fe, 712.5


#### HOW TO OUTPUT PLOTS OF REGION FOR BACKGROUND POINT SELECTION
## To output plots of background point regions, run the file 'Region.py' in the terminal, with the command given below
## Please review the selected regions, if you wish to change them manually, see the following section
>>> python Region.py


#### MANUALLY SET BACKGROUND REGION HERE
## To manually set a region, include the following information 'Element_Name, Low_Or_High_Region, Starting_Energy, Ending_Energy'
## Include the name of the element, identical to how you wrote it above,
## Whether or not the region you are setting is in the low or high binding energy region (i.e. to the left or right of the peak),
## And what the start and stop points are for the region, NOTE the step size of your XPS data, and use only values divisible by that step
>>>


#### SET CORRECTED CRSF VALUES (Obtained from Multipak)
## CRSF == 'Corrected Relative Sensitivity Factor', needed to obtain At%
## Write CRSF values in the following format 'x, y, z'
## Where x, y, z and the CRSF values corresponding to the 1st, 2nd, and 3rd element listed above in the elements list
>>>


#### HOW TO RUN ERROR ANALYSIS
## This can only be done after running Region.py, or setting all regions manually
## 
>>> python Composition.py
